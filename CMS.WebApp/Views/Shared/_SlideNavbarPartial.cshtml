@using CMS.Models.Authen.Functions
@using CMS.WebApp.Models
@using Newtonsoft.Json
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, ICSoft.Jobman.WebApp
@{
    List<FunctionViewModel> menus = new List<FunctionViewModel>();
    if (ViewBag.Menu != null)
    {
        menus = (List<FunctionViewModel>)ViewBag.Menu;
        menus = menus.Where(m => m.IsShow == 1).ToList();
    }

    var controllerName = this.ViewContext.RouteData.Values["controller"]?.ToString()?.ToLower();
    var actionName = this.ViewContext.RouteData.Values["action"]?.ToString()?.ToLower();
}
<nav class="navbar navbar-light navbar-vertical navbar-expand-lg">
    <script>
        var navbarStyle = localStorage.getItem("navbarStyle");
        if (navbarStyle && navbarStyle !== 'transparent') {
            document.querySelector('.navbar-vertical').classList.add(`navbar-${navbarStyle}`);
        }
    </script>

    <div class="d-flex align-items-center">
        <div class="toggle-icon-wrapper">

            <button class="btn navbar-toggler-humburger-icon navbar-vertical-toggle" data-bs-toggle="tooltip" data-bs-placement="left" title="Toggle Navigation"><span class="navbar-toggle-icon"><span class="toggle-line"></span></span></button>

        </div>  @if (!string.Equals(controllerName, "TRAINING", StringComparison.OrdinalIgnoreCase))
        {
            <a class="navbar-brand" href="@Url.Action("Index" , "User")">
                <div class="d-flex align-items-center py-1">
                    <img class="me-2" src="/assets/img/icons/spot-illustrations/chatbot.png" alt="" width="42" />
                    <span class="font-sans-serif" style="font-size:24px !important;">Supermarket</span>
                </div>
            </a>
        }
    </div>

    <div class="collapse navbar-collapse" id="navbarVerticalCollapse">
        <div class="navbar-vertical-content scrollbar">
            <ul class="navbar-nav flex-column mb-3" id="navbarVerticalNav">
                @if (menus != null && menus.Count > 0)
                {
                    foreach (var menu1 in menus.Where(m => m.LevelId == 1).ToList())
                    {
                        if (menu1.Description.ToLower().Equals("dashboard"))
                        {
                            <li class="nav-item">
                                <a class="nav-link @(controllerName.Equals(menu1.Controler.ToLower()) && actionName.Equals(menu1.Action.ToLower()) ? "active" : "")" href="@Url.Action(menu1.Action, menu1.Controler)" role="button" aria-expanded="false">
                                    <div class="d-flex align-items-center">
                                        <span class="nav-link-icon"><span class="fas fa-chart-pie"></span></span><span class="nav-link-text ps-1">@menu1.Description</span>
                                    </div>
                                </a>
                            </li>
                        }
                        else
                        {
                            @Html.Raw("<li class='nav-item'>")
                            <!-- label-->
                            <div class="row navbar-vertical-label-wrapper mt-3 mb-2">
                                <div class="col-auto navbar-vertical-label">
                                    @menu1.Description
                                </div>
                                <div class="col ps-0">
                                    <hr class="mb-0 navbar-vertical-divider" />
                                </div>
                            </div>
                            foreach (var menu2 in menus.Where(m => m.ParentFunctionId == menu1.FunctionId).ToList())
                            {
                                if (!string.IsNullOrEmpty(menu2.Controler) && !string.IsNullOrEmpty(menu2.Action))
                                {
                                    if (menu2.FunctionId == 1214)
                                    {
                                        <a class="nav-link @(menu2.Selected ? "active" : "")" href="@Url.Action(menu2.Action, menu2.Controler)" role="button" aria-expanded="false">
                                            <div class="d-flex align-items-center position-relative">
                                                <span class="nav-link-icon"><span class="@(string.IsNullOrEmpty(menu2.Icon) ? "fas fa-caret-right" : menu2.Icon)"></span></span><span class="nav-link-text ps-1">@menu2.Description</span>
                                                @if (ViewBag.InvestmentMustProfitPayCounter != null && (int)ViewBag.InvestmentMustProfitPayCounter > 0)
                                                {
                                                    <span class="must-profit-pay-counter">
                                                        @(
                                                            ((int)ViewBag.InvestmentMustProfitPayCounter)
                                                            )
                                                    </span>
                                                }
                                            </div>
                                        </a>
                                    }
                                    else
                                    {
                                        <a class="nav-link @(menu2.Selected ? "active" : "")" href="@Url.Action(menu2.Action, menu2.Controler)" role="button" aria-expanded="false">
                                            <div class="d-flex align-items-center">
                                                <span class="nav-link-icon"><span class="@(string.IsNullOrEmpty(menu2.Icon) ? "fas fa-caret-right" : menu2.Icon)"></span></span><span class="nav-link-text ps-1">@menu2.Description</span>
                                            </div>
                                        </a>
                                    }
                                }
                                else
                                {
                                    if (menu2.FunctionId == 1214)
                                    {
                                        <a class="nav-link dropdown-indicator" href="#sub_@menu2.FunctionId" role="button" data-bs-toggle="collapse" aria-expanded="@(menu2.Selected ? "true" : "false")" aria-controls="sub_@menu2.FunctionId">
                                            <div class="d-flex align-items-center position-relative">
                                                <span class="nav-link-icon"><span class="@(string.IsNullOrEmpty(menu2.Icon) ? "fas fa-caret-right" : menu2.Icon)"></span></span><span class="nav-link-text ps-1">@menu2.Description</span>
                                                @if (ViewBag.InvestmentMustProfitPayCounter != null && (int)ViewBag.InvestmentMustProfitPayCounter > 0)
                                                {
                                                    <span class="must-profit-pay-counter">
                                                        @(
                                                            ((int)ViewBag.InvestmentMustProfitPayCounter)
                                                            )
                                                    </span>
                                                }
                                            </div>
                                        </a>
                                    }
                                    else
                                    {
                                        <a class="nav-link dropdown-indicator" href="#sub_@menu2.FunctionId" role="button" data-bs-toggle="collapse" aria-expanded="@(menu2.Selected ? "true" : "false")" aria-controls="sub_@menu2.FunctionId">
                                            <div class="d-flex align-items-center">
                                                <span class="nav-link-icon"><span class="@(string.IsNullOrEmpty(menu2.Icon) ? "fas fa-caret-right" : menu2.Icon)"></span></span><span class="nav-link-text ps-1">@menu2.Description</span>
                                            </div>
                                        </a>
                                    }
                                    <ul class="nav collapse @(menu2.Selected ? "show" : "hide")" id="sub_@menu2.FunctionId">
                                        @foreach (var menu3 in menus.Where(m => m.ParentFunctionId == menu2.FunctionId).ToList())
                                        {
                                            if (!string.IsNullOrEmpty(menu3.Controler) && !string.IsNullOrEmpty(menu3.Action))
                                            {
                                                <li class="nav-item">
                                                    <a class="nav-link @(menu3.Selected ? "active" : "")" href="@Url.Action(menu3.Action, menu3.Controler)" aria-expanded="false">
                                                        <div class="d-flex align-items-center">
                                                            <span class="nav-link-text ps-1">@menu3.Description</span>
                                                        </div>
                                                    </a>
                                                </li>
                                            }
                                            else
                                            {
                                                @Html.Raw("<li class='nav-item'>")
                                                <a class="nav-link dropdown-indicator" href="#sub_@menu3.FunctionId" data-bs-toggle="collapse" aria-expanded="@(menu3.Selected ? "true" : "false")" aria-controls="sub_@menu3.FunctionId">
                                                    <div class="d-flex align-items-center">
                                                        <span class="nav-link-text ps-1">@menu3.Description</span>
                                                    </div>
                                                </a>
                                                <ul class="nav collapse @(menu3.Selected ? "show" : "hide")" id="sub_@menu3.FunctionId">
                                                    @foreach (var menu4 in menus.Where(m => m.ParentFunctionId == menu3.FunctionId).ToList())
                                                    {
                                                        <li class="nav-item">
                                                            <a class="nav-link @(menu4.Selected ? "active" : "")" href="@Url.Action(menu4.Action, menu4.Controler)" aria-expanded="false">
                                                                <div class="d-flex align-items-center">
                                                                    <span class="nav-link-text ps-1">@menu4.Description</span>
                                                                </div>
                                                            </a>
                                                        </li>
                                                    }
                                                </ul>
                                                @Html.Raw("</li>")
                                            }
                                        }
                                    </ul>
                                }
                            }
                            @Html.Raw("</li>")
                        }
                    }
                }
            </ul>
        </div>
    </div>
</nav>

